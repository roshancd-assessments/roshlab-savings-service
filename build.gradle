plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.openapi.generator' version '7.0.1'
    id 'org.flywaydb.flyway' version '9.22.3'
    id 'checkstyle'
}

group = 'com.roshlab'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

checkstyle {
    toolVersion = '10.12.5'
    ignoreFailures = true
    config = resources.text.fromFile("config/checkstyle/sun_checks.xml")
}

compileJava {
    options.annotationProcessorPath = configurations.annotationProcessor
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2025.0.0")
}

dependencies {
    // Annotation Processors
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'

    // Database & Flyway
    implementation 'org.flywaydb:flyway-core:9.22.1'
    runtimeOnly 'org.postgresql:postgresql'

    // Micrometer
    runtimeOnly 'io.micrometer:micrometer-registry-dynatrace'

    // Lombok (compile only + annotation processor)
    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    testCompileOnly 'org.projectlombok:lombok:1.18.34'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'

    // Test Dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:testcontainers'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.testcontainers:junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Mapper to map DOT to Entity
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    // For Lombok support with MapStruct
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    // This enable spinning up DB on a docker container at dev time
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

    // Swagger UI generation
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
    systemProperty 'spring.profiles.active', 'test'

    testLogging {
        // Events to be shown on the console
        events "passed", "skipped", "failed"
        showStandardStreams = true
    }

    doFirst {
        jvmArgs '-javaagent:' + configurations.testRuntimeClasspath.find { it.name.contains('mockito-core') }.absolutePath
    }
}

openApiValidate {
    inputSpec = "$rootDir/openapi.yaml".toString()
}

tasks.named('bootRun') {
    // This removes the need for the --args='--spring.profiles.active=dev' at dev time
    args '--spring.profiles.active=dev'
}

flyway {
    url = 'jdbc:postgresql://localhost:5432/savings'
    user = 'postgres'
    password = 'postgres'
}
